openapi: 3.0.0
info:
  title: API de Gestão
  description: API para gerenciar usuários, tarefas e organizações.
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /users:
    post:
      summary: Cria um novo usuário.
      operationId: createUser
      tags:
        - Usuários
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'John Doe'
                password:
                  type: string
                  example: 'password123'
                organizationId:
                  type: string
                  example: 'org123'
                role:
                  type: string
                  enum: 
                    - ADMIN
                    - ORGANIZATION_ADMIN
                    - USER
                  example: 'USER'
      responses:
        '201':
          description: Usuário criado com sucesso.
        '400':
          description: Requisição inválida.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    get:
      summary: Retorna todos os usuários.
      operationId: getAllUsers
      tags:
        - Usuários
      responses:
        '200':
          description: Lista de usuários.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

  /users/{id}:
    get:
      summary: Retorna um usuário específico pelo ID.
      operationId: getUserById
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário.
          schema:
            type: string
      responses:
        '200':
          description: Detalhes do usuário.
        '404':
          description: Usuário não encontrado.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    put:
      summary: Atualiza as informações de um usuário específico.
      operationId: updateUser
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'John Doe'
                password:
                  type: string
                  example: 'password123'
                organizationId:
                  type: string
                  example: 'org123'
                role:
                  type: string
                  enum: 
                    - ADMIN
                    - ORGANIZATION_ADMIN
                    - USER
                  example: 'USER'
      responses:
        '200':
          description: Usuário atualizado com sucesso.
        '404':
          description: Usuário não encontrado.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    delete:
      summary: Deleta um usuário específico e suas tarefas.
      operationId: deleteUser
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário.
          schema:
            type: string
      responses:
        '200':
          description: Usuário removido com sucesso.
        '404':
          description: Usuário não encontrado.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

  /tasks:
    post:
      summary: Cria uma nova tarefa.
      operationId: createTask
      tags:
        - Tarefas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'Nova Tarefa'
                description:
                  type: string
                  example: 'Descrição da tarefa.'
                dueDate:
                  type: string
                  format: date
                  example: '2024-09-27T03:01:36.324Z'
                userId:
                  type: string
                  example: 'user123'
                organizationId:
                  type: string
                  example: 'organization123'
      responses:
        '201':
          description: Tarefa criada com sucesso.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    get:
      summary: Retorna todas as tarefas do usuário.
      operationId: getAllTasks
      tags:
        - Tarefas
      responses:
        '200':
          description: Lista de tarefas.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

  /tasks/{id}:
    get:
      summary: Retorna uma tarefa específica pelo ID.
      operationId: getTaskById
      tags:
        - Tarefas
      parameters:
        - name: id
          in: path
          required: true
          description: ID da tarefa.
          schema:
            type: string
      responses:
        '200':
          description: Detalhes da tarefa.
        '404':
          description: Tarefa não encontrada.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    put:
      summary: Atualiza uma tarefa específica.
      operationId: updateTask
      tags:
        - Tarefas
      parameters:
        - name: id
          in: path
          required: true
          description: ID da tarefa.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'Tarefa Atualizada'
                description:
                  type: string
                  example: 'Nova descrição da tarefa.'
                dueDate:
                  type: string
                  format: date
                  example: '2024-09-27T03:01:36.324Z'
                userId:
                  type: string
                  example: 'user123'
                organizationId:
                  type: string
                  example: 'organization123'
      responses:
        '200':
          description: Tarefa atualizada com sucesso.
        '404':
          description: Tarefa não encontrada.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    delete:
      summary: Deleta uma tarefa específica.
      operationId: deleteTask
      tags:
        - Tarefas
      parameters:
        - name: id
          in: path
          required: true
          description: ID da tarefa.
          schema:
            type: string
      responses:
        '200':
          description: Tarefa removida com sucesso.
        '404':
          description: Tarefa não encontrada.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

  /auth/login:
    post:
      summary: Loga em um usuário.
      operationId: loginUser
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: 'john.doe'
                password:
                  type: string
                  example: 'password123'
      responses:
        '200':
          description: Retorna o token de autorização do usuário.
          content:
            application/json:
              schema:
                type: object
                properties:
                  acessToken:
                    type: string
                    example: 'Bearer <token>'
        '401':
          description: Credenciais inválidas.

  /organizations:
    post:
      summary: Cria uma nova organização.
      operationId: createOrganization
      tags:
        - Organizações
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Nova Organização'
      responses:
        '201':
          description: Organização criada com sucesso.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    get:
      summary: Retorna todas as organizações.
      operationId: getAllOrganizations
      tags:
        - Organizações
      responses:
        '200':
          description: Lista de organizações.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

  /organizations/{id}:
    get:
      summary: Retorna uma organização específica pelo ID.
      operationId: getOrganizationById
      tags:
        - Organizações
      parameters:
        - name: id
          in: path
          required: true
          description: ID da organização.
          schema:
            type: string
      responses:
        '200':
          description: Detalhes da organização.
        '404':
          description: Organização não encontrada.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    put:
      summary: Atualiza uma organização específica.
      operationId: updateOrganization
      tags:
        - Organizações
      parameters:
        - name: id
          in: path
          required: true
          description: ID da organização.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Organização Atualizada'
      responses:
        '200':
          description: Organização atualizada com sucesso.
        '404':
          description: Organização não encontrada.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []

    delete:
      summary: Deleta uma organização específica, suas tarefas e seus usuários.
      operationId: deleteOrganization
      tags:
        - Organizações
      parameters:
        - name: id
          in: path
          required: true
          description: ID da organização.
          schema:
            type: string
      responses:
        '200':
          description: Organização removida com sucesso.
        '404':
          description: Organização não encontrada.
        '401':
          description: Token inválido.
      security:
        - bearerAuth: []